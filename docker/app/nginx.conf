user www-data;
worker_processes auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections 256;
    # multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log off;

    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens off;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_static on;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_min_length 512;
    gzip_proxied any;
    gzip_vary on;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_types
        text/css
        text/plain
        text/javascript
        application/javascript
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon
        application/rss+xml
        application/atom_xml;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 240;

    # if client stop responding, free up memory -- default 60
    send_timeout 240;

    # server will close connection after this time -- default 75
    keepalive_timeout 240;

    client_max_body_size 2G;

    log_format custom '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $body_bytes_sent '
                '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen       80;
        listen  [::]:80;
        server_name  _;

        access_log  /var/log/nginx/access.log custom;

        add_header X-Frame-Options SAMEORIGIN;

        root   /var/www/public;
        location / {
            index  index.html index.htm index.php;
            try_files $uri $uri/ /index.php$is_args$args;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /var/www/public$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }
    }

    server {
        listen 8080;
        server_name _;

        auth_basic off;

        access_log /dev/null;

        location /stub_status {
            stub_status;
        }
    }
}
